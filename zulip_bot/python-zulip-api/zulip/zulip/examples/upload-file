#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright Â© 2012-2017 Zulip, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from __future__ import print_function
import argparse

from six.moves import StringIO as _StringIO
from typing import IO, Any
import zulip

class StringIO(_StringIO):
    name = ''  # https://github.com/python/typeshed/issues/598

usage = """upload-file [options]

Upload a file, and print the corresponding URI.

Example: upload-file --file-path=cat.png

Specify your Zulip API credentials and server in a ~/.zuliprc file or using the options.
If no --file-path is specified, a placeholder text file will be used instead.
"""

parser = zulip.add_default_arguments(argparse.ArgumentParser(usage=usage))
parser.add_argument('--file-path', required=True)
options = parser.parse_args()

client = zulip.init_from_options(options)

if options.file_path:
    file = open(options.file_path, 'rb')  # type: IO[Any]
else:
    file = StringIO('This is a test file.')
    file.name = 'test.txt'

response = client.upload_file(file)

try:
    print('File URI: {}'.format(response['uri']))
except KeyError:
    print('Error! API response was: {}'.format(response))
